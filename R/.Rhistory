q()
load("~/.RData")
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
4*1*3-b^2
q()
load("~/.RData")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
1+1
str(PlantGrowth)
a<-1
a<-1
b<--1
c<-3
x1=-b+(sqrt(4*1*3-b^2)/(2*1))
x1
x2=--b-(sqrt(4*1*3-b^2)/(2*1))
x2
install.packages("all")
install.packages("Hmisc", dependencies=TRUE)
area
if (area<100){
print("Bath room")
}else if (area==240){
print("Siting room")
}else(area>240){
print ("Dining Hall")
}
install.packages("Hmisc", dependencies=TRUE)
getOption("repos")
libray("dislay")
lib()
library()
setwd("C\Users\samel\OneDrive\Documents")
getwd
setwd("C\Users\samel\OneDrive\Documents")
getwd()
weight.csv")
mydata<-read.csv("birth_weight.csv")
mydata<-read.csv("birth_weight0.csv")
setwd("~/")
getO\Users\samel\OneDrive\Desktop\SESSion 3.1
(C\Users\samel\OneDrive\Desktop\SESSion 3.1)
setwd(C:\Users\samel\OneDrive\Desktop\SESSion 3.1)
setwd(C:\Users\samel\OneDrive\Desktop\SESSion 3.1)
setwd(c:\Users\samel\OneDrive\Desktop\SESSion 3.1)
setwd(c:Users\samel\OneDrive\Desktop\SESSion 3.1)
setwd(c:Users\samel\OneDrive\Desktop\SESSion 3.1\Statical_epidemiology\birth_weight0")
setwd(c:\samel\OneDrive\Desktop\SESSion 3.1\Statical_epidemiology\birth_weight0")
get wd()
setwd(c:\samel\OneDrive\Desktop\SESSion 3.1\Statical_epidemiology\birth_weight0")
get wd
setwd("~/")
my data<-read.csv("birth_weight0.csv")
dir()
my data<-read.csv("birth_weight0.csv")
install.packages("glm")
install.packages(c("survival", "analysis"))
install.packages(c("epi", "calc"))
install.packages("Gmodels")
YES
install.packages("gmodels")
install.packages("DataExplorer")
install.packages("qcc")
install.packages("glm2")
install.packages("corprot")
install.packages("rgl")
library("Hmisc")
install.packages("lattice")
install.packages("survival")
install.packages("survivalAnalysis")
install.packages("Formula")
mydata1<-read.csv("case_control.csv")
mydata1<-read.csv("time_data.csv")
str(mydata1)
mydata1<-read.csv("time_data.csv")
mydata1<- read.csv("time_data.csv")
str(mydata1)
mydata<- read.csv("time_data.csv")
str(mydata)
names(mydata)
length(mydata$subjid)
mydata<- read.csv("time_data.csv")
str(mydata)
mydata<-read.csv("case_control.csv")
str(mydata)
names(mydata)
library("epicalc")
mydata<- read.csv("birth_weight0.csv")
demo(graphics)
median
hist(log(deaths)
boxplot(deaths ~ time)
plot(deaths~time)
library(dplyr)
plot(time~deaths)
search()
library(dplyr)
hist(weight ~ group, data=data1)
anova(lm(weight~group,data = data1))
boxplot(weight~group,data = data1)
png("plant_boxplot.png",width = 300, height = 400)
dev.off()
ggplot2::(deaths~time, data=data1)
demo(graphics)
<Return>
<Return>
<Return>
<Return>
<Return>
<Return>
<Return>
<Return>
<Return>
<Return>
library(tidyverse)
install.packages(dplyr)
library(dplyr)
utils:::menuInstallPkgs()
q()
library("abind", lib.loc="C:/Users/samel/AppData/Local/R/win-library/4.2")
library(tidyverse)
install.packages("dplyr")
library(tidyverse)
num_of_defects<-data_set[, 2]
num_of_defects
data_set<-read.csv("buad502a-m3-expert-data1-defects.csv")
data_set
setwd("~/")
data_set<-read.csv("buad502a-m3-expert-data1-defects.csv")
c-1,2,3,4,5,6,7
c
c-1,2,3,4,5,6,7
c
library(dplyr)
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Load the dataset (same folder)
data <- read.csv("regional_sales_data.csv")
# Quick structure check and basic cleaning
str(data)
data <- na.omit(data)  # Remove missing values if any
# Normalize numerical columns for clustering
data_norm <- data %>%
select(Quantity, Revenue) %>%
scale()
# Set seed for reproducibility
set.seed(123)
# Perform k-means clustering (k = 3)
kmeans_result <- kmeans(data_norm, centers = 3, nstart = 25)
# Add cluster labels to original data
data$Cluster <- as.factor(kmeans_result$cluster)
# Visualize the clusters
ggplot(data, aes(x = Quantity, y = Revenue, color = Cluster)) +
geom_point(size = 3, alpha = 0.8) +
theme_minimal() +
labs(
title = "K-means Clustering of Regional Sales Data",
x = "Quantity Sold",
y = "Revenue",
color = "Cluster"
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Load the dataset (same folder)
data <- read.csv("regional_sales_data.csv")
# Quick structure check and basic cleaning
str(data)
data <- na.omit(data)  # Remove missing values if any
# Normalize numerical columns for clustering
data_norm <- data %>%
select(Quantity, Revenue) %>%
scale()
# Set seed for reproducibility
set.seed(123)
# Perform k-means clustering (k = 3)
kmeans_result <- kmeans(data_norm, centers = 3, nstart = 25)
# Add cluster labels to original data
data$Cluster <- as.factor(kmeans_result$cluster)
# Visualize the clusters
ggplot(data, aes(x = Quantity, y = Revenue, color = Cluster)) +
geom_point(size = 3, alpha = 0.8) +
theme_minimal() +
labs(
title = "K-means Clustering of Regional Sales Data",
x = "Quantity Sold",
y = "Revenue",
color = "Cluster"
)
# -------------------------------
# 1. Load Required Libraries
# -------------------------------
library(ggplot2)
library(dplyr)
# -------------------------------
# 2. Set Working Directory
# -------------------------------
# (Adjust this path as needed if running elsewhere)
setwd("C:/Users/brian/Downloads/R")
# -------------------------------
# 3. Load Dataset
# -------------------------------
data <- read.csv("regional_sales_data.csv")
# View structure of the data
str(data)
# -------------------------------
# 4. Clean and Prepare the Data
# -------------------------------
# Remove any missing values
data <- na.omit(data)
# -------------------------------
# 5. Normalize the Numeric Features
# -------------------------------
data_norm <- data %>%
select(Quantity, Revenue) %>%
scale()
# -------------------------------
# 6. Perform K-Means Clustering
# -------------------------------
set.seed(123)  # For reproducibility
kmeans_result <- kmeans(data_norm, centers = 3, nstart = 25)
# Add cluster assignments to the original dataset
data$Cluster <- as.factor(kmeans_result$cluster)
# -------------------------------
# 7. Visualize the Clusters
# -------------------------------
ggplot(data, aes(x = Quantity, y = Revenue, color = Cluster)) +
geom_point(size = 3, alpha = 0.8) +
theme_minimal() +
labs(
title = "K-Means Clustering of Regional Sales Data",
x = "Quantity Sold",
y = "Revenue",
color = "Cluster"
)
---
title: "K-Means Clustering Analysis - with explanation"
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
---
title: "K-Means Clustering Analysis - with explanation"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
summary(cars)
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
plot(pressure)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
# -------------------------------
# 1. Load Required Libraries
# -------------------------------
library(ggplot2)
library(dplyr)
# -------------------------------
# 2. Set Working Directory
# -------------------------------
# (Adjust this path as needed if running elsewhere)
setwd("C:/Users/brian/Downloads/R")
# -------------------------------
# 3. Load Dataset
# -------------------------------
data <- read.csv("regional_sales_data.csv")
# View structure of the data
str(data)
# -------------------------------
# 4. Clean and Prepare the Data
# -------------------------------
# Remove any missing values
data <- na.omit(data)
# -------------------------------
# 5. Normalize the Numeric Features
# -------------------------------
data_norm <- data %>%
select(Quantity, Revenue) %>%
scale()
# -------------------------------
# 6. Perform K-Means Clustering
# -------------------------------
set.seed(123)  # For reproducibility
kmeans_result <- kmeans(data_norm, centers = 3, nstart = 25)
# Add cluster assignments to the original dataset
data$Cluster <- as.factor(kmeans_result$cluster)
# -------------------------------
# 7. Visualize the Clusters
# -------------------------------
ggplot(data, aes(x = Quantity, y = Revenue, color = Cluster)) +
geom_point(size = 3, alpha = 0.8) +
theme_minimal() +
labs(
title = "K-Means Clustering of Regional Sales Data",
x = "Quantity Sold",
y = "Revenue",
color = "Cluster"
)
